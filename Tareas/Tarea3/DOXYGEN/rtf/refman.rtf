{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Contactos  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 \par
}}Contactos}
{\comment Generado por doxygen 1.10.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Contactos}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Versi\'F3n 1\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Tabla de contenidos\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Tarea 3\par \pard\plain 
{\tc\tcl1 \v Tarea 3}
{\xe \v Tarea 3}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
 \par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Parte practica
\par}
{\tc\tcl2 \v Parte practica}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Programa que simula un almacenamiento de contactos en la nube.
\par}
{\tc\tcl3 \v Programa que simula un almacenamiento de contactos en la nube.}
Opciones del programa:{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Agregar un contacto.\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Eliminar un contacto.\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Imprimir Hash-Table y Listas Enlazadas.\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Mostrar todos los contactos".
5. Salir del programa".\par}
\par
\par}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Compilar:
\par}
{\tc\tcl3 \v Compilar:}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid g++ -o main.exe .\\main.cpp .\\HashTable.cpp .\\Funciones.cpp .\\FuncionesCloud.cpp\par
}
 \par}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Ejecutar:
\par}
{\tc\tcl3 \v Ejecutar:}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid .\\main.exe\par
}
\par}
\par}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Parte teorica
\par}
{\tc\tcl2 \v Parte teorica}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
1. \'C2\'BFQue es un algoritmo y cuales son sus caracteristicas principales?
\par}
{\tc\tcl3 \v 1. \'C2\'BFQue es un algoritmo y cuales son sus caracteristicas principales?}
Conjunto de instrucciones para resolver un problema particular.\par
Caracteristicas: a. La entrada y la salida deben definirse con precision. b. Cada paso del algoritmo debe ser claro e inequivoco. c. Los algoritmos deberias ser mas eficaces entre muchas formas diferentes de resolver un problema. d. Un algoritmo no deberia incluir codigo informatico.\par}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
2. Explica la diferencia entre un algoritmo eficiente y uno ineficiente.
\par}
{\tc\tcl3 \v 2. Explica la diferencia entre un algoritmo eficiente y uno ineficiente.}
Un algoritmo efinciente es aquel que realiza una tarea en la menor cantida de tiempo y utilizando la menor cantidad de memoria posible. En el caso contrario, un algoritmo ineficiente realiza una tarea en una gran cantidad de tiempo y utilizando una gran cantidad de memoria.\par}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
3. \'C2\'BFQue es una estructura de datos y por que son importantes?
\par}
{\tc\tcl3 \v 3. \'C2\'BFQue es una estructura de datos y por que son importantes?}
Una estructura de datos es un almacenamiento que se utiliza para almacenar y organizar datos. Es importante seleccionar una correcta estructura de datos para lograr la mejor eficiencia.\par}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
4. Describe las diferencias entre una estructura de datos estatica y una dinamica.
\par}
{\tc\tcl3 \v 4. Describe las diferencias entre una estructura de datos estatica y una dinamica.}
En la estructura de datos estatica la memoria para las estructuras se asigna durante la compilacion. Por otra parte, la estructura de datos dinamica la memoria para las estructuras se asigna durante la ejecucion.\par}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
5. \'C2\'BFQue es la memoria dinamica y como se gestiona en lenguajes de programacion como C++, explique las operaciones que se pueden realizar?
\par}
{\tc\tcl3 \v 5. \'C2\'BFQue es la memoria dinamica y como se gestiona en lenguajes de programacion como C++, explique las operaciones que se pueden realizar?}
La memoria dinamica es la asignacion que se realiza en los espacios de memoria durante la ejecucion. La memoria dinamica se puede utilizar con variables como malloc y realloc.\par}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
6. \'C2\'BFCuales son las ventajas y desventajas de la memoria dinamica en comparacion con la memoria estatica?
\par}
{\tc\tcl3 \v 6. \'C2\'BFCuales son las ventajas y desventajas de la memoria dinamica en comparacion con la memoria estatica?}
La memoria dinamica permite mayor flexibilidad y adaptibilidad del codigo, pero aumenta la complejidad y el riesgo de fugas de la memoria. Por otra parte, la memoria estatica posee un riesgo de fugas de memoria bajo y mayor eficiencia.\par}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
7. Explique que es un arbol binario y cuales son sus principales caracter\'C4\'B1sticas.
\par}
{\tc\tcl3 \v 7. Explique que es un arbol binario y cuales son sus principales caracter\'C4\'B1sticas.}
Es una estructura de datos de arbol en la que cada nodo padre puede tener como maximo dos hijos. Cada nodo de un arbol binario consta de tres elementos: datos, direccion del hijo izquierdo, direccion del hijo derecho.\par}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
8. \'C2\'BFQue es una cola (queue) y en que situaciones se utiliza comunmente?
\par}
{\tc\tcl3 \v 8. \'C2\'BFQue es una cola (queue) y en que situaciones se utiliza comunmente?}
Espacio en memoria que funciona bajo la regla de Primero en entrar, primero en salir. Su principal aplicacion es en aquellos casos en que los datos ingresar por orden de llegada.\par}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
9. \'C2\'BFCual es la diferencia entre una cola queue y una pila (stack)?
\par}
{\tc\tcl3 \v 9. \'C2\'BFCual es la diferencia entre una cola queue y una pila (stack)?}
La diferencia entre la cola y la pila es en el orden de acceso. La cola sigue la regla de Primero en entrar, primero en salir. La pila sigue la regla de Primero en entrar, ultimo en salir.\par}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
10. Describe como funciona el algoritmo de insercion (insert) en una tabla hash.
\par}
{\tc\tcl3 \v 10. Describe como funciona el algoritmo de insercion (insert) en una tabla hash.}
El algoritmo de insercion en una tabla hash se encarga de ingresar un par a la tabla hash y se encarga de asignarle la llave correspondiente.\par}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
11. \'C2\'BFQue es la funcion de dispersion (hash function) y por que es importante en las tablas hash?
\par}
{\tc\tcl3 \v 11. \'C2\'BFQue es la funcion de dispersion (hash function) y por que es importante en las tablas hash?}
La funcion de dispersion se encarga de distribuir los datos nuevos en la tabla hash uniformemente con su respectiva indexacion.\par}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
12. \'C2\'BFCual es la complejidad temporal promedio de busqueda en una tabla hash bien implementada?
\par}
{\tc\tcl3 \v 12. \'C2\'BFCual es la complejidad temporal promedio de busqueda en una tabla hash bien implementada?}
La complejidad temporal promedio es de O(1), lo cual significa que el tiempo promedio para encontrar un elemento es constante.\par}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
13. Explica como se realiza la operacion de insercion (push) en una pila (stack).
\par}
{\tc\tcl3 \v 13. Explica como se realiza la operacion de insercion (push) en una pila (stack).}
Para realizar la operacion de insercion en una pila se debe verificar si hay espacio disponible en la memoria. En caso de no haber espacio disponible, se expande. Se almacena el nuevo elemento y se actualiza el tama\'C3\'B1o de la pila.\par}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
14. \'C2\'BFCual es la complejidad temporal de las operaciones de apilar (push) y desapilar (pop) en una pila?
\par}
{\tc\tcl3 \v 14. \'C2\'BFCual es la complejidad temporal de las operaciones de apilar (push) y desapilar (pop) en una pila?}
Al igual que en la tabla hash, la complejidad temporal promedio es de O(1), lo cual significa que el tiempo promedio para encontrar un elemento es constante.\par}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
15. Describe como funciona una lista enlazada y cuales son sus ventajas y desventajas.
\par}
{\tc\tcl3 \v 15. Describe como funciona una lista enlazada y cuales son sus ventajas y desventajas.}
Una lista enlazada es una lista que posee un elemento que apunta al siguiente elemento de la lista. Esto permite poder tener una relacion entre todos los elemntos, pero requiere de una mayor complejidad para acceder a los elementos del mismo.\par}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
16. \'C2\'BFQue es un nodo en una lista enlazada y que contiene?
\par}
{\tc\tcl3 \v 16. \'C2\'BFQue es un nodo en una lista enlazada y que contiene?}
Un nodo en una lista enlaza es un nodo que apunta al siguiente nodo. Contiene el dato del nodo y la direccion del siguiente nodo.\par}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
17. \'C2\'BFCual es la diferencia entre una lista enlazada simple y una lista enlazada doblemente enlazada?
\par}
{\tc\tcl3 \v 17. \'C2\'BFCual es la diferencia entre una lista enlazada simple y una lista enlazada doblemente enlazada?}
En una lista enlazada simple, un elemento apunta al siguiente. En una lista enlazada doble enlazada, un elemento puede apuntar a uno o dos elementos.\par}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
18. \'C2\'BFComo se realiza la eliminacion (delete) de un nodo en una lista enlazada?
\par}
{\tc\tcl3 \v 18. \'C2\'BFComo se realiza la eliminacion (delete) de un nodo en una lista enlazada?}
La eliminacion de un nodo de una lista se realiza guardando el estado actual de la lista situado en la posicion actual que se desea eliminar, se elimina el elemento en una variable temporal y se reasigna los valores sin el valor eliminado.\par}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
19. Explica como funciona el algoritmo de recorrido (traversal) en un arbol binario.
\par}
{\tc\tcl3 \v 19. Explica como funciona el algoritmo de recorrido (traversal) en un arbol binario.}
Recorrido en orden: Primero, todos los nodos en el sub\'C3\'A1rbol izquierdo. Luego, el nodo ra\'C3\'ADz. Finalmente todos los nodos en el sub\'C3\'A1rbol derecho. Recorrido de pre-orden: Primero, el nodo ra\'C3\'ADz. Luego, todos los nodos en el sub\'C3\'A1rbol izquierdo. Finalmente todos los nodos en el sub\'C3\'A1rbol derecho. Recorrido post-orden: Primero, todos los nodos en el sub\'C3\'A1rbol izquierdo. Luego, todos los nodos en el sub\'C3\'A1rbol derecho. Finalmente, el nodo ra\'C3\'ADz.\par}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
20. \'C2\'BFCual es la complejidad temporal del recorrido en preorden, en orden y en postorden en un arbol binario balanceado?
\par}
{\tc\tcl3 \v 20. \'C2\'BFCual es la complejidad temporal del recorrido en preorden, en orden y en postorden en un arbol binario balanceado?}
Al igual que en la tabla hash, la complejidad temporal promedio es de O(n), en el que n es el numero de nodos en el arbol.\par}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
21. Explique la diferencia entre la notacion Big O (O) y la notacion Omega () en el analisis de la complejidad temporal de los algoritmos. Proporciona un ejemplo de un algoritmo y determina su complejidad temporal utilizando ambas notaciones Big O y Omega.
\par}
{\tc\tcl3 \v 21. Explique la diferencia entre la notacion Big O (O) y la notacion Omega () en el analisis de la complejidad temporal de los algoritmos. Proporciona un ejemplo de un algoritmo y determina su complejidad temporal utilizando ambas notaciones Big O y Omega.}
La notaci\'C3\'B3n Big-O representa el l\'C3\'ADmite superior del tiempo de ejecuci\'C3\'B3n de un algoritmo. Por tanto, proporciona la complejidad del peor de los casos de un algoritmo.\par
La notaci\'C3\'B3n omega representa el l\'C3\'ADmite inferior del tiempo de ejecuci\'C3\'B3n de un algoritmo. Por lo tanto, proporciona el mejor caso de complejidad de un algoritmo. \par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice de clases\par \pard\plain 
{\tc \v \'CDndice de clases}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de clases\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de clases, estructuras, uniones e interfaces con breves descripciones:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Contacto} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura para definir los Contactos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ContactoCloud} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura para definir los Contactos enlazados })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HashTable} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clase que almacena la estructura de la tabla hash })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice de archivos\par \pard\plain 
{\tc \v \'CDndice de archivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de archivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de todos los archivos con breves descripciones:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b src/{\b Contacto.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b Funciones.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b Funciones.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b FuncionesCloud.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b FuncionesCloud.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b HashTable.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b HashTable.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentaci\'F3n de clases{\tc \v Documentaci\'F3n de clases}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura Contacto\par \pard\plain 
{\tc\tcl2 \v Contacto}
{\xe \v Contacto}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura para definir los Contactos. }}\par
{
{\f2 #include <Contacto.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b nombre}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nombre del contacto. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b telefono}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telefono del contacto. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura para definir los Contactos. \par
}{
Definici\'F3n en la l\'EDnea {\b 8} del archivo {\b Contacto.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de datos miembro\par
\pard\plain 
{\xe \v nombre\:Contacto}
{\xe \v Contacto\:nombre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Contacto::nombre}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nombre del contacto. }}\par
{
Definici\'F3n en la l\'EDnea {\b 10} del archivo {\b Contacto.hpp}.}\par
}
{\xe \v telefono\:Contacto}
{\xe \v Contacto\:telefono}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Contacto::telefono}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telefono del contacto. }}\par
{
Definici\'F3n en la l\'EDnea {\b 12} del archivo {\b Contacto.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b Contacto.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la estructura ContactoCloud\par \pard\plain 
{\tc\tcl2 \v ContactoCloud}
{\xe \v ContactoCloud}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura para definir los Contactos enlazados. }}\par
{
{\f2 #include <Contacto.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b nombre}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nombre del contacto. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b telefono}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telefono del contacto. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hashTableKey}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Llave relacionada a la llave en la tabla Hash. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ContactoCloud} * {\b siguiente}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Direccion del siguiente contacto. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura para definir los Contactos enlazados. \par
}{
Definici\'F3n en la l\'EDnea {\b 17} del archivo {\b Contacto.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de datos miembro\par
\pard\plain 
{\xe \v hashTableKey\:ContactoCloud}
{\xe \v ContactoCloud\:hashTableKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ContactoCloud::hashTableKey}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Llave relacionada a la llave en la tabla Hash. }}\par
{
Definici\'F3n en la l\'EDnea {\b 23} del archivo {\b Contacto.hpp}.}\par
}
{\xe \v nombre\:ContactoCloud}
{\xe \v ContactoCloud\:nombre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string ContactoCloud::nombre}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nombre del contacto. }}\par
{
Definici\'F3n en la l\'EDnea {\b 19} del archivo {\b Contacto.hpp}.}\par
}
{\xe \v siguiente\:ContactoCloud}
{\xe \v ContactoCloud\:siguiente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ContactoCloud}* ContactoCloud::siguiente}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Direccion del siguiente contacto. }}\par
{
Definici\'F3n en la l\'EDnea {\b 25} del archivo {\b Contacto.hpp}.}\par
}
{\xe \v telefono\:ContactoCloud}
{\xe \v ContactoCloud\:telefono}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ContactoCloud::telefono}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Telefono del contacto. }}\par
{
Definici\'F3n en la l\'EDnea {\b 21} del archivo {\b Contacto.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta estructura est\'E1 generada del siguiente archivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b Contacto.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia de la clase HashTable\par \pard\plain 
{\tc\tcl2 \v HashTable}
{\xe \v HashTable}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clase que almacena la estructura de la tabla hash. }}\par
{
{\f2 #include <HashTable.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
M\'E9todos p\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~HashTable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b estaVacio} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b funcionHash} (int key)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que determina la llave de indexacion de la tabla Hash. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ingresarContacto} (int key, string value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la tabla Hash. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eliminarContacto} ({\b Contacto} contactos[], int numContactos, string nombre)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la tabla Hash. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirTabla} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la tabla Hash. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descripci\'F3n detallada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clase que almacena la estructura de la tabla hash. \par
}{
Definici\'F3n en la l\'EDnea {\b 12} del archivo {\b HashTable.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de constructores y destructores\par
\pard\plain 
{\xe \v ~HashTable\:HashTable}
{\xe \v HashTable\:~HashTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual HashTable::~HashTable (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 18} del archivo {\b HashTable.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones miembro\par
\pard\plain 
{\xe \v eliminarContacto\:HashTable}
{\xe \v HashTable\:eliminarContacto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HashTable::eliminarContacto ({\b Contacto}  {\i contactos}[], int  {\i numContactos}, string  {\i nombre})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la tabla Hash. }}\par
{
Definici\'F3n en la l\'EDnea {\b 49} del archivo {\b HashTable.cpp}.}\par
}
{\xe \v estaVacio\:HashTable}
{\xe \v HashTable\:estaVacio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool HashTable::estaVacio () const}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 10} del archivo {\b HashTable.cpp}.}\par
}
{\xe \v funcionHash\:HashTable}
{\xe \v HashTable\:funcionHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int HashTable::funcionHash (int  {\i key})}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que determina la llave de indexacion de la tabla Hash. }}\par
{
Definici\'F3n en la l\'EDnea {\b 23} del archivo {\b HashTable.cpp}.}\par
}
{\xe \v imprimirTabla\:HashTable}
{\xe \v HashTable\:imprimirTabla}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HashTable::imprimirTabla ()}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la tabla Hash. }}\par
{
Definici\'F3n en la l\'EDnea {\b 80} del archivo {\b HashTable.cpp}.}\par
}
{\xe \v ingresarContacto\:HashTable}
{\xe \v HashTable\:ingresarContacto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int HashTable::ingresarContacto (int  {\i key}, string  {\i value})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la tabla Hash. }}\par
{
Definici\'F3n en la l\'EDnea {\b 28} del archivo {\b HashTable.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
La documentaci\'F3n de esta clase est\'E1 generada de los siguientes archivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b HashTable.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b HashTable.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documentaci\'F3n de archivos{\tc \v Documentaci\'F3n de archivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo README.md\par \pard\plain 
{\tc\tcl2 \v README.md}
{\xe \v README.md}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo src/Contacto.hpp\par \pard\plain 
{\tc\tcl2 \v src/Contacto.hpp}
{\xe \v src/Contacto.hpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Contacto}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura para definir los Contactos. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ContactoCloud}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estructura para definir los Contactos enlazados. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Contacto.hpp\par \pard\plain 
{\tc\tcl2 \v src/Contacto.hpp}
{\xe \v src/Contacto.hpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir a la documentaci\'F3n de este archivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef CONTACTO_HPP}\par
00002 {\cf21 #define CONTACTO_HPP}\par
00003 \par
00004 {\cf21 #include <iostream>}\par
00005 {\cf21 #include <string>}\par
00006 \par
00008 {\cf17 struct }Contacto \{\par
00010     std::string nombre;\par
00012     {\cf18 int} telefono;\par
00013     \par
00014 \};\par
00015 \par
00017 {\cf17 struct }ContactoCloud \{\par
00019     std::string nombre;\par
00021     {\cf18 int} telefono;\par
00023     {\cf18 int} hashTableKey;\par
00025     ContactoCloud* siguiente;\par
00026 \};\par
00027 \par
00028 \par
00029 {\cf21 #endif }{\cf20 // CONTACTO_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo src/Funciones.cpp\par \pard\plain 
{\tc\tcl2 \v src/Funciones.cpp}
{\xe \v src/Funciones.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Contacto.hpp"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contacto} {\b agregarContacto} ({\b Contacto} contactos[], int &numContactos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la memoria del celular. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eliminarContacto} ({\b Contacto} contactos[], int &numContactos, string nombre)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la memoria del celular. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bubbleSort} ({\b Contacto} contactos[], int numContactos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de ordenar de forma alfabetica los contactos. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarContactos} ({\b Contacto} contactos[], int &numContactos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la memoria del celular. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v agregarContacto\:Funciones.cpp}
{\xe \v Funciones.cpp\:agregarContacto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Contacto} agregarContacto ({\b Contacto}  {\i contactos}[], int &  {\i numContactos})}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la memoria del celular. }}\par
{
Definici\'F3n en la l\'EDnea {\b 6} del archivo {\b Funciones.cpp}.}\par
}
{\xe \v bubbleSort\:Funciones.cpp}
{\xe \v Funciones.cpp\:bubbleSort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bubbleSort ({\b Contacto}  {\i contactos}[], int  {\i numContactos})}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de ordenar de forma alfabetica los contactos. }}\par
{
Definici\'F3n en la l\'EDnea {\b 47} del archivo {\b Funciones.cpp}.}\par
}
{\xe \v eliminarContacto\:Funciones.cpp}
{\xe \v Funciones.cpp\:eliminarContacto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void eliminarContacto ({\b Contacto}  {\i contactos}[], int &  {\i numContactos}, string  {\i nombre})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la memoria del celular. }}\par
{
Definici\'F3n en la l\'EDnea {\b 33} del archivo {\b Funciones.cpp}.}\par
}
{\xe \v mostrarContactos\:Funciones.cpp}
{\xe \v Funciones.cpp\:mostrarContactos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarContactos ({\b Contacto}  {\i contactos}[], int &  {\i numContactos})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la memoria del celular. }}\par
{
Definici\'F3n en la l\'EDnea {\b 75} del archivo {\b Funciones.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Funciones.cpp\par \pard\plain 
{\tc\tcl2 \v src/Funciones.cpp}
{\xe \v src/Funciones.cpp}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir a la documentaci\'F3n de este archivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "Contacto.hpp"}\par
00002 {\cf21 #include <string>}\par
00003 {\cf17 using namespace }std;\par
00004 \par
00006 Contacto agregarContacto(Contacto contactos[], {\cf18 int} &numContactos) \{\par
00007 \par
00008     {\cf20 // Consulta de datos del nuevo contacto}\par
00009     {\cf18 string} nombre;\par
00010     {\cf18 int} telefono;\par
00011     cout << {\cf22 "\\nIngrese el nombre del contacto: "};\par
00012     cin.ignore();\par
00013     getline(cin, nombre);\par
00014     cout << {\cf22 "Ingrese el numero de telefono: "};\par
00015     cin >> telefono;\par
00016 \par
00017     {\cf20 // Se agrega el nuevo contacto a la lista de contactos que se tiene}\par
00018     {\cf18 int} index = numContactos+1;\par
00019     contactos[index].nombre = nombre;\par
00020     contactos[index].telefono = telefono;\par
00021 \par
00022     numContactos++;\par
00023 \par
00024     {\cf20 // Se retorna el contacto nuevo}\par
00025     Contacto contacto;\par
00026     contacto.nombre = nombre;\par
00027     contacto.telefono = telefono;\par
00028 \par
00029     {\cf19 return} contacto;\par
00030 \}\par
00031 \par
00033 {\cf18 void} eliminarContacto(Contacto contactos[], {\cf18 int} &numContactos, {\cf18 string} nombre) \{\par
00034     {\cf19 for} ({\cf18 int} j = 0; j < numContactos; j++) \{\par
00035         {\cf19 if} (contactos[j].nombre == nombre) \{\par
00036             {\cf19 for} ({\cf18 int} i = j; i < numContactos; i++) \{\par
00037                 contactos[i].nombre = contactos[i + 1].nombre;\par
00038                 contactos[i].telefono = contactos[i + 1].telefono;\par
00039             \};\par
00040             numContactos--;\par
00041             {\cf19 break};\par
00042         \};\par
00043     \};\par
00044 \}\par
00045 \par
00047 {\cf18 void} bubbleSort(Contacto contactos[], {\cf18 int} numContactos) \{\par
00048 \par
00049     {\cf19 for} ({\cf18 int} step = 0; step < numContactos; ++step) \{\par
00050 \par
00051         {\cf18 int} swapped = 0;\par
00052 \par
00053         {\cf19 for} ({\cf18 int} i = 0; i < (numContactos-step-1); ++i) \{\par
00054 \par
00055             {\cf19 if} (contactos[i].nombre < contactos[i + 1].nombre) \{\par
00056 \par
00057                 {\cf18 string} tempNombre = contactos[i].nombre;\par
00058                 contactos[i].nombre = contactos[i + 1].nombre;\par
00059                 contactos[i + 1].nombre = tempNombre;\par
00060 \par
00061                 {\cf18 int} tempTelefono = contactos[i].telefono;\par
00062                 contactos[i].telefono = contactos[i + 1].telefono;\par
00063                 contactos[i + 1].telefono = tempTelefono;\par
00064 \par
00065                 swapped = 1;\par
00066             \}\par
00067         \}\par
00068 \par
00069         {\cf19 if} (swapped == 0)\par
00070             {\cf19 break};\par
00071     \}\par
00072 \}\par
00073 \par
00075 {\cf18 void} mostrarContactos(Contacto contactos[], {\cf18 int} &numContactos) \{\par
00076     bubbleSort(contactos, numContactos);\par
00077     cout << {\cf22 "Lista de contactos: "} << endl;\par
00078     {\cf19 for} ({\cf18 int} i = 0; i < numContactos; ++i) \{\par
00079         cout << {\cf22 "Nombre: "} << contactos[i].nombre << endl;\par
00080         cout << {\cf22 "Telefono: "} << contactos[i].telefono << endl;\par
00081     \}\par
00082 \}\par
00083 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo src/Funciones.hpp\par \pard\plain 
{\tc\tcl2 \v src/Funciones.hpp}
{\xe \v src/Funciones.hpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Contacto.hpp"}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contacto} {\b agregarContacto} ({\b Contacto} listaContactos[], int &numContactos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la memoria del celular. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eliminarContacto} ({\b Contacto} contactos[], int &numContactos, string nombre)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la memoria del celular. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarContactos} ({\b Contacto} contactos[], int &numContactos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la memoria del celular. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bubbleSort} ({\b Contacto} contactos[], int numContactos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de ordenar de forma alfabetica los contactos. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v agregarContacto\:Funciones.hpp}
{\xe \v Funciones.hpp\:agregarContacto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Contacto} agregarContacto ({\b Contacto}  {\i listaContactos}[], int &  {\i numContactos})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la memoria del celular. }}\par
{
Definici\'F3n en la l\'EDnea {\b 6} del archivo {\b Funciones.cpp}.}\par
}
{\xe \v bubbleSort\:Funciones.hpp}
{\xe \v Funciones.hpp\:bubbleSort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bubbleSort ({\b Contacto}  {\i contactos}[], int  {\i numContactos})}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de ordenar de forma alfabetica los contactos. }}\par
{
Definici\'F3n en la l\'EDnea {\b 47} del archivo {\b Funciones.cpp}.}\par
}
{\xe \v eliminarContacto\:Funciones.hpp}
{\xe \v Funciones.hpp\:eliminarContacto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void eliminarContacto ({\b Contacto}  {\i contactos}[], int &  {\i numContactos}, string  {\i nombre})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la memoria del celular. }}\par
{
Definici\'F3n en la l\'EDnea {\b 33} del archivo {\b Funciones.cpp}.}\par
}
{\xe \v mostrarContactos\:Funciones.hpp}
{\xe \v Funciones.hpp\:mostrarContactos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarContactos ({\b Contacto}  {\i contactos}[], int &  {\i numContactos})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la memoria del celular. }}\par
{
Definici\'F3n en la l\'EDnea {\b 75} del archivo {\b Funciones.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Funciones.hpp\par \pard\plain 
{\tc\tcl2 \v src/Funciones.hpp}
{\xe \v src/Funciones.hpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir a la documentaci\'F3n de este archivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef FUNCIONES_HPP}\par
00002 {\cf21 #define FUNCIONES_HPP}\par
00003 \par
00004 {\cf21 #include "Contacto.hpp"}\par
00005 {\cf21 #include <iostream>}\par
00006 {\cf17 using namespace }std;\par
00007 {\cf20 // Definicion de los encabezados de cada una de las funciones}\par
00008 Contacto agregarContacto(Contacto listaContactos[], {\cf18 int} &numContactos);\par
00009 {\cf18 void} eliminarContacto(Contacto contactos[], {\cf18 int} &numContactos, {\cf18 string} nombre);\par
00010 {\cf18 void} mostrarContactos(Contacto contactos[], {\cf18 int} &numContactos);\par
00011 {\cf18 void} bubbleSort(Contacto contactos[], {\cf18 int} numContactos);\par
00012 \par
00013 {\cf21 #endif }{\cf20 // FUNCIONES_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo src/FuncionesCloud.cpp\par \pard\plain 
{\tc\tcl2 \v src/FuncionesCloud.cpp}
{\xe \v src/FuncionesCloud.cpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FuncionesCloud.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b agregarContactoCloud} ({\b ContactoCloud} *&cloud, int valorHash, string nombre, int telefono)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la memoria cloud. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarContactosCloud} ({\b ContactoCloud} *cloud)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la memoria cloud. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eliminarContactoCloud} ({\b ContactoCloud} *&cloud, string nombre)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la memoria cloud. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v agregarContactoCloud\:FuncionesCloud.cpp}
{\xe \v FuncionesCloud.cpp\:agregarContactoCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void agregarContactoCloud ({\b ContactoCloud} *&  {\i cloud}, int  {\i valorHash}, string  {\i nombre}, int  {\i telefono})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la memoria cloud. }}\par
{
Definici\'F3n en la l\'EDnea {\b 4} del archivo {\b FuncionesCloud.cpp}.}\par
}
{\xe \v eliminarContactoCloud\:FuncionesCloud.cpp}
{\xe \v FuncionesCloud.cpp\:eliminarContactoCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void eliminarContactoCloud ({\b ContactoCloud} *&  {\i cloud}, string  {\i nombre})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la memoria cloud. }}\par
{
Definici\'F3n en la l\'EDnea {\b 32} del archivo {\b FuncionesCloud.cpp}.}\par
}
{\xe \v mostrarContactosCloud\:FuncionesCloud.cpp}
{\xe \v FuncionesCloud.cpp\:mostrarContactosCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarContactosCloud ({\b ContactoCloud} *  {\i cloud})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la memoria cloud. }}\par
{
Definici\'F3n en la l\'EDnea {\b 17} del archivo {\b FuncionesCloud.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FuncionesCloud.cpp\par \pard\plain 
{\tc\tcl2 \v src/FuncionesCloud.cpp}
{\xe \v src/FuncionesCloud.cpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir a la documentaci\'F3n de este archivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "FuncionesCloud.hpp"}\par
00002 \par
00004 {\cf18 void} agregarContactoCloud(ContactoCloud*& cloud, {\cf18 int} valorHash, {\cf18 string} nombre, {\cf18 int} telefono) \{\par
00005     ContactoCloud* contactoNuevo = {\cf17 new} ContactoCloud;\par
00006 \par
00007     contactoNuevo->hashTableKey = valorHash;\par
00008     contactoNuevo->nombre = nombre;\par
00009     contactoNuevo->telefono = telefono;\par
00010 \par
00011     contactoNuevo->siguiente = cloud;\par
00012 \par
00013     cloud = contactoNuevo;\par
00014 \}\par
00015 \par
00017 {\cf18 void} mostrarContactosCloud(ContactoCloud* cloud) \{\par
00018     {\cf19 if} (cloud == {\cf17 nullptr}) \{\par
00019         {\cf19 return};\par
00020     \}\par
00021 \par
00022     cout << {\cf22 "Lista de contactos en la nube: "} << endl;\par
00023     {\cf19 while} (cloud != {\cf17 nullptr}) \{\par
00024         cout << {\cf22 "Nombre: "} << cloud->nombre;\par
00025         cout << {\cf22 " Telefono: "} << cloud->telefono << endl;\par
00026         cloud = cloud->siguiente;\par
00027     \}\par
00028     cout << endl;\par
00029 \}\par
00030 \par
00032 {\cf18 void} eliminarContactoCloud(ContactoCloud*& cloud, {\cf18 string} nombre) \{\par
00033     ContactoCloud* actualCloud = cloud;\par
00034     ContactoCloud* nextCloud = cloud->siguiente;\par
00035     ContactoCloud* newCloud = {\cf17 nullptr};\par
00036 \par
00037     {\cf19 while}(nextCloud != {\cf17 nullptr}) \{\par
00038         {\cf19 if} (actualCloud->nombre == nombre)\{\par
00039             {\cf19 if} (nextCloud == {\cf17 nullptr}) \{\par
00040                 {\cf19 break};\par
00041             \}\par
00042             agregarContactoCloud(newCloud, nextCloud->hashTableKey, nextCloud->nombre, nextCloud->telefono);\par
00043         \} {\cf19 else} \{\par
00044             agregarContactoCloud(newCloud, actualCloud->hashTableKey, actualCloud->nombre, actualCloud->telefono);\par
00045         \}\par
00046 \par
00047         actualCloud = actualCloud->siguiente;\par
00048         nextCloud = nextCloud->siguiente;\par
00049     \}\par
00050     cloud = newCloud;\par
00051 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo src/FuncionesCloud.hpp\par \pard\plain 
{\tc\tcl2 \v src/FuncionesCloud.hpp}
{\xe \v src/FuncionesCloud.hpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Contacto.hpp"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b agregarContactoCloud} ({\b ContactoCloud} *&cloud, int valorHash, string nombre, int telefono)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la memoria cloud. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarContactosCloud} ({\b ContactoCloud} *cloud)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la memoria cloud. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eliminarContactoCloud} ({\b ContactoCloud} *&cloud, string nombre)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la memoria cloud. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v agregarContactoCloud\:FuncionesCloud.hpp}
{\xe \v FuncionesCloud.hpp\:agregarContactoCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void agregarContactoCloud ({\b ContactoCloud} *&  {\i cloud}, int  {\i valorHash}, string  {\i nombre}, int  {\i telefono})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de agregar contactos a la memoria cloud. }}\par
{
Definici\'F3n en la l\'EDnea {\b 4} del archivo {\b FuncionesCloud.cpp}.}\par
}
{\xe \v eliminarContactoCloud\:FuncionesCloud.hpp}
{\xe \v FuncionesCloud.hpp\:eliminarContactoCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void eliminarContactoCloud ({\b ContactoCloud} *&  {\i cloud}, string  {\i nombre})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de eliminar contactos de la memoria cloud. }}\par
{
Definici\'F3n en la l\'EDnea {\b 32} del archivo {\b FuncionesCloud.cpp}.}\par
}
{\xe \v mostrarContactosCloud\:FuncionesCloud.hpp}
{\xe \v FuncionesCloud.hpp\:mostrarContactosCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarContactosCloud ({\b ContactoCloud} *  {\i cloud})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Funcion que se encarga de mostrar los contactos de la memoria cloud. }}\par
{
Definici\'F3n en la l\'EDnea {\b 17} del archivo {\b FuncionesCloud.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FuncionesCloud.hpp\par \pard\plain 
{\tc\tcl2 \v src/FuncionesCloud.hpp}
{\xe \v src/FuncionesCloud.hpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir a la documentaci\'F3n de este archivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef FUNCIONESCLOUD_HPP}\par
00002 {\cf21 #define FUNCIONESCLOUD_HPP}\par
00003 \par
00004 {\cf21 #include "Contacto.hpp"}\par
00005 {\cf21 #include <string>}\par
00006 {\cf17 using namespace }std;\par
00007 \par
00008 {\cf20 // Declaracion de las funciones aplicables a la memoria cloud}\par
00009 {\cf18 void} agregarContactoCloud(ContactoCloud*& cloud, {\cf18 int} valorHash, {\cf18 string} nombre, {\cf18 int} telefono);\par
00010 {\cf18 void} mostrarContactosCloud(ContactoCloud* cloud);\par
00011 {\cf18 void} eliminarContactoCloud(ContactoCloud*& cloud, {\cf18 string} nombre);\par
00012 \par
00013 {\cf21 #endif }{\cf20 // FUNCIONESCLOUD_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo src/HashTable.cpp\par \pard\plain 
{\tc\tcl2 \v src/HashTable.cpp}
{\xe \v src/HashTable.cpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "HashTable.hpp"}\par
{\f2 #include "Contacto.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <list>}\par
{\f2 #include <cstring>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HashTable.cpp\par \pard\plain 
{\tc\tcl2 \v src/HashTable.cpp}
{\xe \v src/HashTable.cpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir a la documentaci\'F3n de este archivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "HashTable.hpp"}\par
00002 {\cf21 #include "Contacto.hpp"}\par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <list>}\par
00005 {\cf21 #include <cstring>}\par
00006 {\cf17 using namespace }std;\par
00007 \par
00008 \par
00009 {\cf20 // Definicion del metodo que determina si esta vacio}\par
00010 {\cf18 bool} HashTable::estaVacio(){\cf17  const }\{\par
00011     {\cf18 int} sum\{\};\par
00012     {\cf19 for} ({\cf18 int} i\{\}; i < maxSize; ++i) \{\par
00013         sum += tabla[i].size();\par
00014     \}\par
00015 \par
00016     {\cf19 if} (!sum) \{\par
00017         {\cf19 return} {\cf17 true};\par
00018     \}\par
00019     {\cf19 return} {\cf17 false};\par
00020 \}\par
00021 \par
00023 {\cf18 int} HashTable::funcionHash({\cf18 int} key) \{\par
00024     {\cf19 return} key % maxSize;\par
00025 \}\par
00026 \par
00028 {\cf18 int} HashTable::ingresarContacto({\cf18 int} key, {\cf18 string} value) \{\par
00029     {\cf18 int} valorHash = funcionHash(key);\par
00030     list<pair<int, string>>& filas = tabla[valorHash];\par
00031     list<pair<int, string>>::iterator filasPtr = begin(filas);\par
00032     {\cf18 bool} keyExists = {\cf17 false};\par
00033     {\cf19 for} (; filasPtr != end(filas); ++filasPtr) \{\par
00034         {\cf19 if} (filasPtr->first == key) \{\par
00035             keyExists = {\cf17 true};\par
00036             filasPtr->second = value;\par
00037             {\cf19 break};\par
00038         \}\par
00039     \}\par
00040 \par
00041     {\cf19 if} (!keyExists) \{\par
00042         filas.emplace_back(key, value);\par
00043     \}\par
00044 \par
00045     {\cf19 return} valorHash;\par
00046 \}\par
00047 \par
00049 {\cf18 void} HashTable::eliminarContacto(Contacto contactos[], {\cf18 int} numContactos, {\cf18 string} nombre) \{\par
00050     {\cf18 int} numero = -1;\par
00051     {\cf20 // Primero se determina el numero de telefono del contacto}\par
00052     {\cf19 for} ({\cf18 int} i = 0; i < numContactos; ++i) \{\par
00053         {\cf19 if} (contactos[i].nombre == nombre) \{\par
00054             numero = contactos[i].telefono;\par
00055         \};\par
00056     \};\par
00057 \par
00058     {\cf19 if} (numero == -1) \{\par
00059         {\cf19 return};\par
00060     \};\par
00061 \par
00062     {\cf20 // Se determina el codigo de indexacion}\par
00063     {\cf18 int} valorHash = funcionHash(numero);\par
00064     list<pair<int, string>>& filas = tabla[valorHash];\par
00065     list<pair<int, string>>::iterator filasPtr = begin(filas);\par
00066     {\cf18 bool} keyExists = {\cf17 false};\par
00067     {\cf19 for} (; filasPtr != end(filas); ++filasPtr) \{\par
00068         {\cf19 if} (filasPtr->first == numero) \{\par
00069             keyExists = {\cf17 true};\par
00070             {\cf20 // Se elimina}\par
00071             filasPtr = filas.erase(filasPtr);\par
00072             {\cf19 break};\par
00073         \}\par
00074     \}\par
00075 \par
00076     {\cf19 return};\par
00077 \}\par
00078 \par
00080 {\cf18 void} HashTable::imprimirTabla() \{\par
00081     cout << {\cf22 "Hash Table:"} << endl;\par
00082     {\cf19 for} ({\cf18 int} i\{\}; i < maxSize; ++i) \{\par
00083         {\cf19 if} (tabla[i].size() == 0) \{\par
00084             {\cf19 continue};\par
00085         \}\par
00086 \par
00087         list<pair<int, string>>::iterator filasPtr = tabla[i].begin();\par
00088         {\cf19 for} (; filasPtr != tabla[i].end(); ++filasPtr) \{\par
00089             cout << {\cf22 "Telefono: "} << filasPtr->first << {\cf22 " Nombre: "} << filasPtr->second <<  endl;\par
00090         \}\par
00091         \par
00092     \}\par
00093     cout << endl;\par
00094     {\cf19 return};\par
00095 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo src/HashTable.hpp\par \pard\plain 
{\tc\tcl2 \v src/HashTable.hpp}
{\xe \v src/HashTable.hpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <list>}\par
{\f2 #include <cstring>}\par
{\f2 #include "Contacto.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Clases\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HashTable}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clase que almacena la estructura de la tabla hash. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_KEYS}\~ 100\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v MAX_KEYS\:HashTable.hpp}
{\xe \v HashTable.hpp\:MAX_KEYS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_KEYS\~ 100}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 9} del archivo {\b HashTable.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HashTable.hpp\par \pard\plain 
{\tc\tcl2 \v src/HashTable.hpp}
{\xe \v src/HashTable.hpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Ir a la documentaci\'F3n de este archivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef HASHTABLE_HPP}\par
00002 {\cf21 #define HASHTABLE_HPP}\par
00003 \par
00004 {\cf21 #include <iostream>}\par
00005 {\cf21 #include <list>}\par
00006 {\cf21 #include <cstring>}\par
00007 {\cf21 #include "Contacto.hpp"}\par
00008 {\cf17 using namespace }std;\par
00009 {\cf21 #define MAX_KEYS 100}\par
00010 \par
00012 {\cf17 class }HashTable \{\par
00013     {\cf17 private}:\par
00014         {\cf17 static} {\cf17 const} {\cf18 int} maxSize = MAX_KEYS;\par
00015         list<pair<int, string>> tabla[maxSize];\par
00016     \par
00017     {\cf17 public}:\par
00018         {\cf17 virtual} ~HashTable()\{\} {\cf20 // Destructor}\par
00019         {\cf18 bool} estaVacio() {\cf17 const};\par
00020         {\cf18 int} funcionHash({\cf18 int} key);\par
00021         {\cf18 int} ingresarContacto({\cf18 int} key, {\cf18 string} value);\par
00022         {\cf18 void} eliminarContacto(Contacto contactos[], {\cf18 int} numContactos, {\cf18 string} nombre);\par
00023         {\cf18 void} imprimirTabla();\par
00024 \};\par
00025 \par
00026 {\cf21 #endif }{\cf20 // HASHTABLE_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referencia del archivo src/main.cpp\par \pard\plain 
{\tc\tcl2 \v src/main.cpp}
{\xe \v src/main.cpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "Contacto.hpp"}\par
{\f2 #include "HashTable.hpp"}\par
{\f2 #include "Funciones.hpp"}\par
{\f2 #include "FuncionesCloud.hpp"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
defines\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_CONTACTOS}\~ 10\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeraciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Opciones} \{ {\b AGREGARCONTACTO} = 1
, {\b ELIMINARCONTACTO}
, {\b IMPRIMIRCLOUD}
, {\b MOSTRARCONTACTOS}
, {\b SALIR}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funciones\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de \'ABdefine\'BB\par
\pard\plain 
{\xe \v MAX_CONTACTOS\:main.cpp}
{\xe \v main.cpp\:MAX_CONTACTOS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_CONTACTOS\~ 10}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 9} del archivo {\b main.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de enumeraciones\par
\pard\plain 
{\xe \v Opciones\:main.cpp}
{\xe \v main.cpp\:Opciones}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Opciones}}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valores de enumeraciones:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v AGREGARCONTACTO\:main.cpp}
{\xe \v main.cpp\:AGREGARCONTACTO}
{\qr AGREGARCONTACTO{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\cell }{\cell }{\row }
{\xe \v ELIMINARCONTACTO\:main.cpp}
{\xe \v main.cpp\:ELIMINARCONTACTO}
{\qr ELIMINARCONTACTO{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\cell }{\cell }{\row }
{\xe \v IMPRIMIRCLOUD\:main.cpp}
{\xe \v main.cpp\:IMPRIMIRCLOUD}
{\qr IMPRIMIRCLOUD{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\cell }{\cell }{\row }
{\xe \v MOSTRARCONTACTOS\:main.cpp}
{\xe \v main.cpp\:MOSTRARCONTACTOS}
{\qr MOSTRARCONTACTOS{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\cell }{\cell }{\row }
{\xe \v SALIR\:main.cpp}
{\xe \v main.cpp\:SALIR}
{\qr SALIR{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\cell }{\cell }{\row }
}
\par
{
Definici\'F3n en la l\'EDnea {\b 11} del archivo {\b main.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentaci\'F3n de funciones\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definici\'F3n en la l\'EDnea {\b 19} del archivo {\b main.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.cpp\par \pard\plain 
{\tc\tcl2 \v src/main.cpp}
{\xe \v src/main.cpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Ir a la documentaci\'F3n de este archivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include "Contacto.hpp"}\par
00003 {\cf21 #include "HashTable.hpp"}\par
00004 {\cf21 #include "Funciones.hpp"}\par
00005 {\cf21 #include "FuncionesCloud.hpp"}\par
00006 {\cf21 #include <string>}\par
00007 {\cf17 using namespace }std;\par
00008 \par
00009 {\cf21 #define MAX_CONTACTOS 10}\par
00010 \par
00011 {\cf17 enum} Opciones \{\par
00012     AGREGARCONTACTO = 1,\par
00013     ELIMINARCONTACTO,\par
00014     IMPRIMIRCLOUD,\par
00015     MOSTRARCONTACTOS,\par
00016     SALIR\par
00017 \};\par
00018 \par
00019 {\cf18 int} main() \{\par
00020 \par
00021     {\cf18 int} numContactos = -1;\par
00022     Contacto* contactos = (Contacto*)malloc(MAX_CONTACTOS*{\cf17 sizeof}(Contacto)); \par
00023     HashTable HT;\par
00024     ContactoCloud* cloud = {\cf17 nullptr};\par
00025     Contacto cont;\par
00026     {\cf18 int} valorHash;\par
00027     {\cf18 int} opcionEliminar;\par
00028     {\cf18 string} nombre;\par
00029 \par
00030     {\cf18 int} opcion = 1;\par
00031     {\cf18 bool} exit = {\cf17 false};\par
00032     {\cf19 while}(!exit)\{\par
00033         cout << endl << {\cf22 "///// Contactos /////"} << endl;\par
00034     \par
00035         cout << {\cf22 "1. Agregar un contacto"} << endl;\par
00036         cout << {\cf22 "2. Eliminar un contacto"} << endl;\par
00037         cout << {\cf22 "3. Imprimir Hash-Table y Listas Enlazadas"} << endl;\par
00038         cout << {\cf22 "4. Mostrar todos los contactos"} << endl;\par
00039         cout << {\cf22 "5. Salir del programa"} << endl;\par
00040         \par
00041         cout << {\cf22 "Ingrese su opcion: "};\par
00042         cin >> opcion;\par
00043 \par
00044         {\cf19 switch} (opcion) \{\par
00045             {\cf19 case} AGREGARCONTACTO:\par
00046                 cout << endl;\par
00047                 cont = agregarContacto(contactos, numContactos);\par
00048                 valorHash = HT.ingresarContacto(cont.telefono, cont.nombre);\par
00049                 agregarContactoCloud(cloud, valorHash, cont.nombre, cont.telefono);\par
00050                 {\cf19 break};\par
00051             {\cf19 case} ELIMINARCONTACTO:\par
00052                 cout << endl;\par
00053                 cout << {\cf22 "Ingrese la memoria a eliminar:"} << endl;\par
00054                 cout << {\cf22 "1. Eliminar en la memoria del celular"} << endl;\par
00055                 cout << {\cf22 "2. Eliminar en el almacenamiento - cloud"} << endl;\par
00056                 cout << {\cf22 "Ingrese su opcion: "};\par
00057                 cin >> opcionEliminar;\par
00058                 \par
00059                 cout << {\cf22 "Ingrese el nombre del contacto a eliminar: "};\par
00060                 cin >> nombre;\par
00061 \par
00062                 {\cf19 if} (opcionEliminar == 1) \{\par
00063                     eliminarContacto(contactos, numContactos, nombre);\par
00064                 \} {\cf19 else} {\cf19 if} (opcionEliminar == 2) \{\par
00065                     HT.eliminarContacto(contactos, numContactos, nombre);\par
00066                     eliminarContactoCloud(cloud, nombre);\par
00067                 \} {\cf19 else} \{\par
00068                     cout << endl << {\cf22 "Opcion incorrecta"} << endl;\par
00069                 \};\par
00070                 {\cf19 break};\par
00071             {\cf19 case} IMPRIMIRCLOUD:\par
00072                 cout << endl;\par
00073                 HT.imprimirTabla();\par
00074                 mostrarContactosCloud(cloud);\par
00075                 {\cf19 break};\par
00076             {\cf19 case} MOSTRARCONTACTOS:\par
00077                 cout << endl;\par
00078                 mostrarContactos(contactos,numContactos);\par
00079                 {\cf19 break};\par
00080             {\cf19 case} SALIR:\par
00081                 cout << endl;\par
00082                 cout << {\cf22 "Saliendo del programa"} << endl;\par
00083                 exit = {\cf17 true};\par
00084                 {\cf19 break};\par
00085             {\cf19 default}:\par
00086                 cout << endl << {\cf22 "Opcion incorrecta"} << endl;\par
00087                 {\cf19 break};\par
00088         \};\par
00089     \par
00090     \};\par
00091     free(contactos);\par
00092 \par
00093     {\cf19 return} 0;\par
00094 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
